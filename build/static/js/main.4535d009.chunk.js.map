{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","imageClicked","id","alt","name","src","image","Wrapper","children","Header","score","highScore","App","state","boondocks","getBoondocksCopy","boondock","find","clicked","alert","setHighScore","restartGame","setState","shuffle","console","log","forEach","sequence","Math","random","sort","a","b","currentScore","this","map","key","Component","JSON","parse","stringify","ReactDOM","render","document","getElementById"],"mappings":"i4EAceA,MAXf,SAAsBC,GAEpB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,gBAAgBC,QAAS,kBAAMF,EAAMG,aAAcH,EAAMI,MACtE,yBAAKC,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,W,MCI1BC,MATf,SAAmBT,GAEjB,OAAO,yBAAKC,UAAU,aACpB,yBAAKA,UAAU,OACZD,EAAMU,Y,OCQEC,MAbf,SAAkBX,GAEd,OAAO,yBAAKC,UAAU,0BAClB,yBAAKA,UAAU,yBAAf,yBAGA,uBAAGA,UAAU,oBAAb,2FAGR,uBAAGA,UAAU,gCAAb,gBAA0DD,EAAMY,MAAhE,kBAAsFZ,EAAMa,aCLtFC,E,4MAGJC,MAAQ,CACNC,UAAWF,EAAIG,mBACfL,MAAO,EACPC,UAAW,G,EAGbV,aAAe,SAAAC,GAkBb,IAAMc,EAAW,EAAKH,MAAMC,UAAUG,MAAM,SAAAD,GAAQ,OAAIA,EAASd,KAAOA,MAE9C,IAArBc,EAASE,SAGZC,MAAO,aACP,EAAKC,aAAa,EAAKP,MAAMH,OAC7B,EAAKW,gBAILL,EAASE,SAAU,EACnB,EAAKI,SAAU,CAAEZ,MAAO,EAAKG,MAAMH,MAAQ,IAC3C,EAAKa,UACLC,QAAQC,IAAK,EAAKZ,MAAMH,S,EAK5Ba,QAAU,WAER,EAAKV,MAAMC,UAAUY,SAAS,SAAAV,GAG5BA,EAASW,SAAWC,KAAKC,YAG3B,EAAKhB,MAAMC,UAAUgB,MAAM,SAAEC,EAAGC,GAAL,OAAYD,EAAEJ,SAAWK,EAAEL,YACtD,EAAKL,SAAU,CAAER,UAAW,EAAKD,MAAMC,a,EAMzCO,YAAc,WAIZ,EAAKC,SAAU,CAAER,UAAWF,EAAIG,qBAChC,EAAKO,SAAU,CAAEZ,MAAO,K,EAO1BU,aAAe,SAACa,GACVA,EAAe,EAAKpB,MAAMF,WAC5B,EAAKW,SAAS,CAACX,UAAWsB,K,uDAc7B,IAAD,OACE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CACEvB,MAAOwB,KAAKrB,MAAMH,MAClBC,UAAWuB,KAAKrB,MAAMF,YAIvBuB,KAAKrB,MAAMC,UAAUqB,KAAK,SAAAnB,GAAQ,OACjC,kBAAC,EAAD,CAEEd,GAAIc,EAASd,GACbkC,IAAKpB,EAASd,GACdE,KAAMY,EAASZ,KACfE,MAAOU,EAASV,MAChBL,aAAc,EAAKA,uB,GAzGboC,aAAZzB,EAgFGG,iBAAmB,WACxB,OAAOuB,KAAKC,MAAMD,KAAKE,UAAU1B,KAkCtBF,Q,MCpHf6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.4535d009.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard ( props )\n{\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\" onClick={() => props.imageClicked( props.id )}>\n        <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper ( props )\n{\n  return <div className=\"container\">\n    <div className=\"row\">\n      {props.children}\n    </div>\n  </div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Header ( props )\n{\n    return <div className=\"jumbotron bg-secondary\">\n        <div className=\"display-4 text-center\">\n            Boondocks Memory Game\n    </div>\n        <p className=\"lead text-center\">\n            Click on an image to earn points, but don't click an the same image twice or GAME OVER!\n    </p>\n<p className=\"float-right score text-white\"> Your Score: {props.score} | High Score: {props.highScore}</p>\n    </div>;\n}\n\nexport default Header;\n\n\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport boondocks from \"./boondocks.json\";\nimport Header from \"./components/Header\"\n\nclass App extends Component\n{\n  // Setting this.state. for booondocks and score \n  state = {\n    boondocks: App.getBoondocksCopy(),\n    score: 0,\n    highScore: 0\n  };\n\n  imageClicked = id =>\n  {\n\n    // loop through boondocks json to find element by id\n    // for (let i = 0; i < this.state.boondocks.length; i++) {\n    //   const element = this.state.boondocks[i];\n    //   if (element.id === id) {\n    //     // Check the state of clicked\n    //     if (element.clicked === true) {\n    //       // game over\n    //     }else {\n    //       element.clicked = true\n    //       // increment score\n    //     }\n    //   }\n    // }\n\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const boondock = this.state.boondocks.find( boondock => boondock.id === id );\n    // @ts-ignore\n    if ( boondock.clicked === true )\n    {\n      // game over\n      alert( \"Game Over\" )\n      this.setHighScore(this.state.score)\n      this.restartGame()\n    } else\n    {\n      // @ts-ignore\n      boondock.clicked = true\n      this.setState( { score: this.state.score + 1 } )\n      this.shuffle()\n      console.log( this.state.score )\n    }\n\n  };\n\n  shuffle = () =>\n  {\n    this.state.boondocks.forEach( boondock =>\n    {\n      // @ts-ignore\n      boondock.sequence = Math.random()\n    } );\n    // @ts-ignore\n    this.state.boondocks.sort( ( a, b ) => a.sequence - b.sequence )\n    this.setState( { boondocks: this.state.boondocks } )\n\n\n  }\n\n\n  restartGame = () =>\n  {\n    \n\n    this.setState( { boondocks: App.getBoondocksCopy() } )\n    this.setState( { score: 0 } )\n    \n\n\n  }\n\n\n  setHighScore = (currentScore) => {\n    if (currentScore > this.state.highScore) {\n      this.setState({highScore: currentScore})\n    }\n  }\n\n\n  static getBoondocksCopy = () => {\n    return JSON.parse(JSON.stringify(boondocks))\n  }\n\n\n\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render ()\n  {\n    return (\n      <Wrapper>\n        <Header\n          score={this.state.score}\n          highScore={this.state.highScore}>\n\n        </Header>\n\n        {this.state.boondocks.map( boondock => (\n          <FriendCard\n\n            id={boondock.id}\n            key={boondock.id}\n            name={boondock.name}\n            image={boondock.image}\n            imageClicked={this.imageClicked}\n\n\n          />\n        ) )}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}